<?xml version="1.0" encoding="UTF-8"?>
<!--

    jCRK – Cracking cryptographic hash functions implemented in Java.
    Copyright © 2016 Filip van Laenen <f.a.vanlaenen@ieee.org>

    This file is part of jCRK.

    jCRK is free software: you can redistribute it and/or modify it under the
    terms of the GNU General Public License as published by the Free Software
    Foundation, either version 3 of the License, or (at your option) any later
    version.
 
    jCRK is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
    details.
 
    You can find a copy of the GNU General Public License in /doc/gpl.txt

  -->
<project
      xmlns="http://maven.apache.org/POM/4.0.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.filipvanlaenen.jcrk</groupId>
  <artifactId>jcrk</artifactId>
  <packaging>jar</packaging>
  <version>1.0</version>
  <name>jCRK</name>
  <description>
    Java implementation of CRK
  </description>
  <developers>
    <developer>
      <name>Filip van Laenen</name>
      <email>f.a.vanlaenen@ieee.org</email>
    </developer>
  </developers>
  <dependencies>
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.9.10</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <prerequisites>
    <maven>3.0.1</maven>
  </prerequisites>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
        <artifactId>maven-java-formatter-plugin</artifactId>
        <version>0.4</version>
        <configuration>
          <compilerCompliance>1.8</compilerCompliance>
          <compilerSource>1.8</compilerSource>
          <compilerTargetPlatform>1.8</compilerTargetPlatform>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.6</version>
        <configuration>
          <rulesets>
            <ruleset>pmd.xml</ruleset>
          </rulesets>
          <targetJdk>1.5</targetJdk>
          <includeTests>true</includeTests>
          <verbose>true</verbose>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.4</version>
        <configuration>
          <effort>Max</effort>
          <threshold>Low</threshold>
          <xmlOutput>true</xmlOutput>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase> 
            <goals>
              <goal>check</goal> 
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <check>
            <haltOnFailure>true</haltOnFailure>
            <lineRate>80</lineRate>
            <branchRate>80</branchRate>
            <packageLineRate>80</packageLineRate>
            <packageBranchRate>80</packageBranchRate>
            <totalLineRate>80</totalLineRate>
            <totalBranchRate>80</totalBranchRate>
          </check>
          <instrumentation>
            <excludes>
              <exclude>net/filipvanlaenen/jcrk/StandardHashFunction.class</exclude>
            </excludes>
          </instrumentation>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>clean</goal>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.pitest</groupId>
        <artifactId>pitest-maven</artifactId>
        <version>1.1.10</version>
        <configuration>
          <targetClasses>
            <param>net.filipvanlaenen.jcrk.*</param>
          </targetClasses>
          <targetTests>
            <param>net.filipvanlaenen.jcrk.*</param>
          </targetTests>
          <mutators>
            <mutator>CONDITIONALS_BOUNDARY</mutator>
            <mutator>CONSTRUCTOR_CALLS</mutator>
            <mutator>EXPERIMENTAL_SWITCH</mutator>
            <mutator>INCREMENTS</mutator>
            <mutator>INVERT_NEGS</mutator>
            <mutator>MATH</mutator>
            <mutator>NEGATE_CONDITIONALS</mutator>
            <mutator>NON_VOID_METHOD_CALLS</mutator>
            <mutator>REMOVE_CONDITIONALS</mutator>
            <mutator>RETURN_VALS</mutator>
            <mutator>VOID_METHOD_CALLS</mutator>
          </mutators>
          <timestampedReports>
			      false
          </timestampedReports>
          <mutationThreshold>80</mutationThreshold>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>mutationCoverage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.5</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.6</version>
      </plugin>
    </plugins>
  </reporting>
</project>
